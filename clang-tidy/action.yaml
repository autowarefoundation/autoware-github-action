name: clang-tidy
description: ""

inputs:
  rosdistro:
    description: ""
    required: true
  target-package:
    description: ""
    required: true
  clang-tidy-config-url:
    description: ""
    required: true
  build-depends-repos:
    description: ""
    required: false
  token:
    description: ""
    required: false
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Show target files
      run: |
        echo "target packages: ${{ inputs.target-packages }}"
      shell: bash

    - name: Install pip for rosdep
      run: |
        sudo apt-get -yq update
        sudo apt-get -yq install python3-pip
      shell: bash

    - name: Install Clang-Tidy
      run: |
        sudo apt-get -yq update
        sudo apt-get -yq install clang-tidy-12
      shell: bash

    - name: Clone dependency packages
      if: ${{ inputs.build-depends-repos != ''}}
      run: |
        git config --local --unset-all http.https://github.com/.extraheader || true
        git config --global url.https://x-access-token:${{ inputs.token }}@github.com.insteadOf 'https://github.com'
        mkdir dependency_ws
        vcs import dependency_ws < ${{ inputs.build-depends-repos }}
      shell: bash

    - name: Run rosdep install
      run: |
        sudo apt-get -yq update
        rosdep update
        DEBIAN_FRONTEND=noninteractive rosdep install -yq --from-paths . --ignore-src --rosdistro ${{ inputs.rosdistro }}
      shell: bash

    - name: Restore build files from cache
      id: restore-build-files
      uses: actions/cache@v2
      with:
        path: |
          ./build
          ./install
        key: build-${{ github.sha }}

    - name: Build
      if: ${{ steps.restore-build-files.outputs.cache-hit != 'true' }}
      run: |
        . /opt/ros/${{ inputs.rosdistro }}/setup.sh
        colcon build --event-handlers console_cohesion+ \
          --packages-up-to ${{ inputs.target-packages }} \
          --cmake-args -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      shell: bash

    - name: Retrieve .clang-tidy
      run: |
        curl -fsSL -o .clang-tidy ${{ inputs.clang-tidy-config-url }} \
          -H "Authorization: token ${{ inputs.token }}"
      shell: bash

    - name: Analyze
      run: |
        clang-tidy -p build/compile_commands.json $(colcon list --paths-only ${{ inputs.target-packages }})
      shell: bash
