name: colcon-build-and-test
description: ""

inputs:
  rosdistro:
    description: ""
    required: true
  target-packages:
    description: ""
    required: true
  build-depends-repos:
    description: ""
    required: false
  token:
    description: ""
    required: false
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - name: Show target packages
      run: |
        echo "target packages: ${{ inputs.target-packages }}"
      shell: bash

    - name: Install pip for rosdep
      run: |
        sudo apt-get -yqq update
        sudo apt-get -yqq install python3-pip
      shell: bash

    - name: Clone dependency packages
      if: ${{ inputs.build-depends-repos != ''}}
      run: |
        git config --local --unset-all http.https://github.com/.extraheader || true
        git config --global url.https://x-access-token:${{ inputs.token }}@github.com.insteadOf 'https://github.com'
        mkdir dependency_ws
        vcs import dependency_ws < ${{ inputs.build-depends-repos }}
      shell: bash

    - name: Run rosdep install
      run: |
        sudo apt-get -yqq update
        rosdep update
        DEBIAN_FRONTEND=noninteractive rosdep install -yqq --from-paths . --ignore-src --rosdistro ${{ inputs.rosdistro }}
      shell: bash

    - name: Set up colcon-mixin
      run: |
        colcon mixin add default https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml || true
        colcon mixin update default
      shell: bash

    - name: Build
      run: |
        . /opt/ros/${{ inputs.rosdistro }}/setup.sh
        colcon build --event-handlers console_cohesion+ \
          --packages-above-and-dependencies ${{ inputs.target-packages }} \
          --cmake-args -DCMAKE_BUILD_TYPE=Release \
          --mixin coverage-gcc coverage-pytest compile-commands
      shell: bash

    - name: Install packages for coverage commands
      run: |
        sudo apt-get -yqq update
        sudo apt-get -yqq install lcov
        pip3 install colcon-lcov-result colcon-coveragepy-result
      shell: bash

    - name: Test
      run: |
        . /opt/ros/${{ inputs.rosdistro }}/setup.sh
        colcon lcov-result --initial --packages-above ${{ inputs.target-packages }}
        colcon test --event-handlers console_cohesion+ \
          --mixin coverage-pytest \
          --packages-above ${{ inputs.target-packages }} \
          --return-code-on-test-failure
        if [ -n "$(find build/ -name coverage.info)" ]; then
          colcon lcov-result --packages-above ${{ inputs.target-packages }}
        fi
        if [ -n "$(find build/ -name .coverage)" ]; then
          colcon coveragepy-result --packages-above ${{ inputs.target-packages }}
        fi
      shell: bash

    - name: Cache build artifacts
      uses: actions/cache@v2
      with:
        path: |
          ./build
          ./install
          ./lcov
          ./coveragepy
        key: build-${{ github.sha }}
